%%
%% @doc This module is auto-generated by rebar3_egrpc_plugin.
%%
%% This module was generated on 2025-06-16T03:17:56+00:00 and should not be modified manually
%% @end

-module(etcdgun_v3lockpb_lock_service).

-export([lock/2, lock/3]).
-export([unlock/2, unlock/3]).

-define(GRPC_SERVICE_NAME, 'v3lockpb.Lock').

%% @doc Call the unary RPC method `Lock' of service `v3lockpb.Lock'.
-spec lock(egrpc:channel(), Request) -> Result when
    Request :: etcdgun_v3lock_pb:'v3lockpb.LockRequest'(),
    Response :: etcdgun_v3lock_pb:'v3lockpb.LockResponse'(),
    Result :: egrpc_stub:unary_ret(Response).
lock(Channel, Request) ->
    lock(Channel, Request, #{}).

-spec lock(egrpc:channel(), Request, Opts) -> Result when
    Result :: egrpc_stub:unary_ret(Response),
    Request :: etcdgun_v3lock_pb:'v3lockpb.LockRequest'(),
    Response :: etcdgun_v3lock_pb:'v3lockpb.LockResponse'(),
    Opts :: egrpc_stub:opts().
lock(Channel, Request, Opts) ->
    RpcDef = etcdgun_v3lock_pb:find_rpc_def(?GRPC_SERVICE_NAME, 'Lock'),
    Grpc = #{
        rpc_def => RpcDef,
        path => <<"/v3lockpb.Lock/Lock">>,
        pb_module => etcdgun_v3lock_pb,
        service_name => ?GRPC_SERVICE_NAME
    },
    egrpc_stub:unary(Channel, Request, Grpc, Opts).

%% @doc Call the unary RPC method `Unlock' of service `v3lockpb.Lock'.
-spec unlock(egrpc:channel(), Request) -> Result when
    Request :: etcdgun_v3lock_pb:'v3lockpb.UnlockRequest'(),
    Response :: etcdgun_v3lock_pb:'v3lockpb.UnlockResponse'(),
    Result :: egrpc_stub:unary_ret(Response).
unlock(Channel, Request) ->
    unlock(Channel, Request, #{}).

-spec unlock(egrpc:channel(), Request, Opts) -> Result when
    Result :: egrpc_stub:unary_ret(Response),
    Request :: etcdgun_v3lock_pb:'v3lockpb.UnlockRequest'(),
    Response :: etcdgun_v3lock_pb:'v3lockpb.UnlockResponse'(),
    Opts :: egrpc_stub:opts().
unlock(Channel, Request, Opts) ->
    RpcDef = etcdgun_v3lock_pb:find_rpc_def(?GRPC_SERVICE_NAME, 'Unlock'),
    Grpc = #{
        rpc_def => RpcDef,
        path => <<"/v3lockpb.Lock/Unlock">>,
        pb_module => etcdgun_v3lock_pb,
        service_name => ?GRPC_SERVICE_NAME
    },
    egrpc_stub:unary(Channel, Request, Grpc, Opts).
